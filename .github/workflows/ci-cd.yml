name: CI-CD Pipeline

on:
  push:
    branches:
      - main
      - 'feature/*'
      - 'release/*'
  pull_request:
    branches:
      - main
      - 'feature/*'
      - 'release/*'

permissions:
  security-events: write
  actions: read
  contents: read
  packages: write
  id-token: write

jobs:
  # ------------------------
  # Code Scan (Codeql)
  # ------------------------
  Codeql-scan:
    uses: aba-enterprise/enterprise-ci-templates/.github/workflows/codeql-template.yml@main
    with:
      languages: '["csharp"]'
      build-mode: "autobuild"   # "none", "autobuild", or "manual"
      dotnet-version: "8.0.x"
    secrets: inherit

  # ------------------------
  # CI Stage (Build + Push to ECR)
  # ------------------------
  ci:
    name: Build and Push Image
    needs: Codeql-scan
    uses: aba-enterprise/enterprise-ci-templates/.github/workflows/docker-image-template.yml@main
    with:
      project-path: './dotnet-ecs-sample/dotnet-ecs-sample.csproj'
      dockerfile-path: './dotnet-ecs-sample/Dockerfile'
      environment: dev
    secrets: inherit

  # ------------------------
  # Deploy to Dev (auto) ECS Task + Service
  # ------------------------
  
  ecs-deploy-dev:
    needs: ci
    uses: aba-enterprise/enterprise-ci-templates/.github/workflows/ecs-taskservice-template.yml@main
    with:
      service-name: ${{ vars.SERVICE_NAME }}
      task-family: ${{ vars.TASK_FAMILY }}
      container-name: ${{ vars.CONTAINER_NAME }}
      desired-count: ${{ vars.DESIRED_COUNT }}
      image-tag: ${{ github.sha }}
      environment: dev
    secrets: inherit

  # # ------------------------
  # # Deploy to QA (requires approval)
  # # ------------------------
  # deploy-qa:
  #   needs: ecs-service-dev
  #   name: Deploy to ECS QA
  #   uses: aba-enterprise/enterprise-ci-templates/.github/workflows/ecr-task-template.yml@main
  #   with:
  #     cluster-name: "qa-ecs-cluster"
  #     task-family: "ecs-test-task"
  #     container-name: "ecs-test-container"
  #     ecr-repo: "nonprodimagerepository"
  #     aws-accountid: "707733857215"
  #   secrets: inherit

  # ecs-service-qa:
  #   needs: deploy-qa
  #   uses: aba-enterprise/enterprise-ci-templates/.github/workflows/ecs-service-template.yml@main
  #   with:
  #     cluster-name: "qa-ecs-cluster"
  #     service-name: "WeatherForecast_api"
  #     task-family: "ecs-test-task"
  #     subnets: "subnet-xxx,subnet-yyy"
  #     security-groups: "sg-zzz"
  #     desired-count: "1"
  #     aws-accountid: "707733857215"
  #     environment: "qa"
  #   secrets: inherit

  # # ------------------------
  # # Deploy to Prod (requires approval)
  # # ------------------------
  # deploy-prod:
  #   needs: ecs-service-qa
  #   name: Deploy to ECS Prod
  #   uses: aba-enterprise/enterprise-ci-templates/.github/workflows/ecr-task-template.yml@main
  #   with:
  #     cluster-name: "prod-ecs-cluster"
  #     task-family: "ecs-test-task"
  #     container-name: "ecs-test-container"
  #     ecr-repo: "nonprodimagerepository"
  #     aws-accountid: "707733857215"
  #   secrets: inherit

  # ecs-service-prod:
  #   needs: deploy-prod
  #   uses: aba-enterprise/enterprise-ci-templates/.github/workflows/ecs-service-template.yml@main
  #   with:
  #     cluster-name: "prod-ecs-cluster"
  #     service-name: "WeatherForecast_api"
  #     task-family: "ecs-test-task"
  #     subnets: "subnet-aaa,subnet-bbb"
  #     security-groups: "sg-ccc"
  #     desired-count: "2"
  #     aws-accountid: "707733857215"
  #     environment: "prod"
  #   secrets: inherit


